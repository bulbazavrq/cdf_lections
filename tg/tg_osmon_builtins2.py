# # # 1) '''Магическими называются даты, в которых произведение дня и месяца
# # # составляет последние две цифры года. Например, 10 июня 1960 года –
# # # магическая дата, поскольку 10 ´ 6 = 60. Напишите функцию, определя-
# # # ющую, является ли введенная дата магической. Используйте написан-
# # # ную функцию в главной программе для отображения всех магических
# # # дат в XX ве­ке.'''
# # 10 июня 1960 года]
months = {
    'января': 1,
    'февраля': 2,
    'марта': 3,
    'апреля': 4,
    'мая': 5,
    'июня': 6,
    'июля': 7,
    'августа': 8,
    'сентября': 9,
    'октября': 10,
    'ноября': 11,
    'декабря': 12
}
date = '10 июня 1960 года'
def magic_d(d): # '10 июня 1960 года' -> 'magic' or 'not magic'
    d = d.split()
    d = [d[0], months[d[1]], d[2]]
    d = [int(x) for x in d]    
    if d[0]*d[1] == d[2]%100:
        return 'magic'
c = []
sf = 0
for yy in range(1900, 2001):
    for mm in list(months.keys()):
        for dd in range(1,32):
            if magic_d(f'{dd} {mm} {yy} года') == 'magic':
                # a = f'{dd} {mm} {yy} года'
                # # print(mm)
                # # print(a,'12')
                # if yy % 4 == 0 and mm == 'февраля' and dd >= 29:
                #     continue
                # else:
                if yy % 4 == 0 and mm == 'февраля' and dd > 28:
                    print(f'{dd} {mm} {yy} года', 'MFASKFKASFMK')
                
                    continue
                c.append(f'{dd} {mm} {yy} года')
                sf+=1
print(sf)
for x in c:
    print(x)
print(len(c))

# # # 2) '''Напишите функцию для определения количества дней в конкретном ме-
# # # сяце. Ваша функция должна принимать два параметра: номер месяца
# # # в виде целого числа в диапазоне от 1 до 12 и год, состоящий из четырех
# # # цифр. Убедитесь, что функция корректно обрабатывает февраль високос-
# # # ного года. В основной программе запросите у пользователя номер месяца
# # # и год и отобразите на экране количество дней в указанном месяце.'''

# def f(m, y):
#     months = {
#         1: 31,
#         2: 28, # февраль 29 в високосный год %4==0  
#         3: 31,
#         4: 30,
#         5: 31,
#         6: 30,
#         7: 31,
#         8: 31,
#         9: 30,
#         10: 31,
#         11: 30,
#         12: 31
#     }
#     if m == 2 and y % 4 == 0:print(months[m]+1)
#     else:print(months[m])
# f(int(input('month: ')),int(input('year: ')))



# # # 3) '''Напишите две функции с именами hex2int и int2hex для конвертации
# # # значений из шестнадцатеричной системы счисления (0, 1, 2, 3, 4, 5, 6, 7,
# # # 8, 9, A, B, C, D, E и F) в десятичную (по основанию 10) и обратно. Функ-
# # # ция hex2int должна принимать на вход строку с единственным символом
# # # в шестнадцатеричной системе и преобразовывать его в число от нуля
# # # до 15 в десятичной системе, тогда как функция int2hex будет выполнять
# # # обратное действие – принимать десятичное число из диапазона от 0 до
# # # 15 и возвращать шестнадцатеричный эквивалент. Обе функции должны
# # # принимать единственный параметр со входным значением и возвращать
# # # преобразованное число. Удостоверьтесь, что функция hex2int корректно
# # # обрабатывает буквы в верхнем и нижнем регистрах. Если введенное поль-
# # # зователем значение выходит за допустимые границы, вы должны вывести
# # # сообщение об ошибке.'''

# dic1 = {
#     '0':0,
#     '1':1,
#     '2':2,
#     '3':3,
#     '4':4,
#     '5':5,
#     '6':6,
#     '7':7,
#     '8':8,
#     '9':9,
#     'a':10,
#     'b':11,
#     'c':12,
#     'd':13,
#     'e':14,
#     'f':15,
# }
# def hex2int(n:str): #16-10
#     try:
#         n = n.lower()
#         a = 0
#         n = n[::-1]
#         for i in range(len(n)):
#             a += dic1[n[i]]*(16**i)
#         print(a)
#     except:
#         print('!!!')
# hex2int('a5')


# def int2hex(n:int): #10-16
#     try:
#         a = []
#         while n != 0:
#             a.append(n%16)
#             n = n//16
#         a = a[::-1]
#         for k, v in dic1.items():
#             if v in a:
#                 a[a.index(v)]=k
#         print(''.join(a))
#     except:
#         print('!!!')
# int2hex(1000)
    

# # # 4) '''Представьте, что в вашем регионе устаревшим является формат номер-
# # # ных автомобильных знаков из трех букв, следом за которыми идут три
# # # цифры. Когда все номера такого шаблона закончились, было решено об-
# # # новить формат, поставив в начало четыре цифры, а за ними три буквы.
# # # Напишите функцию, которая будет генерировать случайный номерной
# # # знак. При этом номера в старом и новом форматах должны создаваться
# # # примерно с одинаковой вероятностью. В основной программе нужно сге-
# # # нерировать и вывести на экран случайный номерной знак.'''

# from random import choice
# from string import ascii_uppercase, digits
# def f():
#     print(choice([
#             f'{choice(digits)}{choice(digits)}{choice(digits)}{choice(digits)}{choice(ascii_uppercase)}{choice(ascii_uppercase)}{choice(ascii_uppercase)}', 
#             f'{choice(ascii_uppercase)}{choice(ascii_uppercase)}{choice(ascii_uppercase)}{choice(digits)}{choice(digits)}{choice(digits)}'
#             ]))
# f()